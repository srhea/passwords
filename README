passwords - an embarrassingly simple password safe

Highlights:

  - Functional: stores all your passwords in a single, encrypted file
  - Secure: 256-bit AES encryption
  - Verifiable: less than 300 lines of Scala code
  - Durable: backup ~/.passwords with Dropbox, or email, or whatever
  - Free: MIT license

The goal of this program is to be moderately more user friendly than storing
passwords in a plain text file encrypted with GnuPG, while at the same time
being short and simple enough that any competent programmer can convince
themselves of its correctness in under 30 minutes. 

Example usage:

  $ passwords 
  Usage:
    passwords <command> [<args>]
  Commands:
    generate [length]
    add <url> <username>
    remove <url> <username>
    list
    search <search string>
    merge <other file>

  $ passwords generate
  g9mYO:=[

  $ passwords add https://www.mint.com/ johndoe
  No existing passwords database.
  Enter a master password: 
  Confirm master password: 
  Password: <copy/paste "g9mYO:=[" from above>

  $ passwords search mint
  Master password: 
  https://www.mint.com/ johndoe g9mYO:=[

  $ passwords remove https://www.mint.com/ johndoe
  Master password: 
  Really remove this entry? (Y/N): y

If you run passwords without any arguments, it will accept commands in a loop,
and you will only have to type your master password once per session.

Installation instructions for MacPorts/Debian/Ubuntu:

  1. Download and install git and sbt:

     apt-get install git sbt   # Debian/Ubuntu
     port install git sbt      # MacPorts
  
  2. Download and install this script:

     mkdir -p ~/src
     cd ~/src
     git clone git://github.com/srhea/passwords.git
     cd passwords
     sbt compile
     export PATH=$PATH:$HOME/src/passwords/bin

Note:

I wrote passwords in Scala because of the languages I know well, Scala
produces shorter, more readable code than C++, and I trust Scala's
cryptographic primitives more than those in Ruby.

Enjoy!
